"""private schemas

Revision ID: e4e2c0be4daf
Revises: 2c01b0ce7ea2
Create Date: 2021-04-15 13:40:08.298144

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e4e2c0be4daf'
down_revision = '2c01b0ce7ea2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prompt', sa.String(), nullable=False),
    sa.Column('answer_as_query', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='private'
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=60), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    schema='private'
    )
    op.create_table('tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('time_started', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('time_submitted', sa.DateTime(), nullable=True),
    sa.Column('user_submitted_query', sa.String(), nullable=True),
    sa.Column('result', sa.SmallInteger(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['private.questions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['private.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='private'
    )
    op.drop_table('tests')
    op.drop_table('questions')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('questions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('questions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('prompt', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('answer_as_query', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='questions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('tests',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('question_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('time_started', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('time_submitted', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_submitted_query', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('result', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], name='tests_question_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='tests_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='tests_pkey')
    )
    op.drop_table('tests', schema='private')
    op.drop_table('users', schema='private')
    op.drop_table('questions', schema='private')
    # ### end Alembic commands ###
