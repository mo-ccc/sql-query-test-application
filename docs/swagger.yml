swagger: "2.0"
info:
  version: "1.0.0"
  title: "Swagger for sql test application"
basePath: "/"
tags:
- name: "user"
- name: "test"
schemes:
- "https"
- "http"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Add a new user"
      description: ""
      operationId: "addPet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User"
        required: true
        schema:
          type: object
          properties:
            email:
              type: string
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "successful operation"
          schema:
            type: object
            properties:
              id:
                type: integer
              email:
                type: string
              tests:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
          
  /test/{testID}:
    get:
      tags:
      - "test"
      summary: "get test by id"
      description: "Returns a test + questions"
      produces:
      - "application/json"
      parameters:
      - name: "testID"
        in: "path"
        description: "id of test"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: object
            properties:
              id:
                type: integer
              time_started:
                type: string
              time_submitted:
                type: string
              user_submitted_query:
                type: string
              result:
                type: integer
              question:
                type: object
                properties:
                  id:
                    type: integer
                  prompt:
                    type: string
                  tables:
                    type: object
                    example:
                      users: [[id, varchar], [created_on, timestamp]]
                  
  /test/{testID}/execute/:
    post:
      tags:
      - "test"
      summary: "executes query on db"
      description: "executes query on db"
      parameters:
      - name: "testID"
        in: "path"
        description: "id of test"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "User"
        required: true
        schema:
          type: object
          properties:
            query:
              type: string
      responses:
        "200":
          description: "successful operation"
          schema:
            type: object
            properties:
              issues:
                type: object
                example:
                  {rows: 2, keys: 2}
              keys:
                type: array
                items:
                  example:
                    [user_id, is_activated]
              matches:
                type: boolean
              rows:
                type: array
                items:
                  type: array
                  items:
                    example:
                      [100, 20, true, phone]
                
                
  /test/{testID}/submit/:
    post:
      tags:
      - "test"
      summary: "submit test for marking"
      description: "submits test for marking"
      parameters:
      - name: "testID"
        in: "path"
        description: "id of test"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "User"
        required: true
        schema:
          type: object
          properties:
            query:
              type: string
      responses:
        "200":
          description: "successful operation"
          schema:
            type: object
            properties:
              id:
                type: integer
              time_started:
                type: string
              time_submitted:
                type: string
              user_submitted_query:
                type: string
              result:
                type: integer
              question:
                type: object
                properties:
                  id:
                    type: integer
                  prompt:
                    type: string
                  tables:
                    type: object
                    example:
                      users: [[id, varchar], [created_on, timestamp]]